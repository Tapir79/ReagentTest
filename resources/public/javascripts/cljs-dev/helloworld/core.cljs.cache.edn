;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name helloworld.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, title helloworld.title, helloworld.title helloworld.title}, :uses nil, :defs {app-state {:name helloworld.core/app-state, :file "src/helloworld/core.cljs", :line 5, :column 1, :end-line 5, :end-column 15, :meta {:file "/Users/sito-macbook/clojure/helloworld/src/helloworld/core.cljs", :line 5, :column 6, :end-line 5, :end-column 15}}, items-list {:protocol-inline nil, :meta {:file "/Users/sito-macbook/clojure/helloworld/src/helloworld/core.cljs", :line 13, :column 7, :end-line 13, :end-column 17, :arglists (quote ([items]))}, :name helloworld.core/items-list, :variadic false, :file "src/helloworld/core.cljs", :end-column 17, :method-params ([items]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([items]))}, app {:protocol-inline nil, :meta {:file "/Users/sito-macbook/clojure/helloworld/src/helloworld/core.cljs", :line 25, :column 7, :end-line 25, :end-column 10, :arglists (quote ([]))}, :name helloworld.core/app, :variadic false, :file "src/helloworld/core.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:div :class :display :items :p :message}, :order [:message :items :display :div :class :p]}, :doc nil}